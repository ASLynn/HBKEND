@model HeyDoc.Web.Models.GroupEditModel


@Html.ValidationSummary()
@Html.HiddenFor(m => m.GroupId)
<div class="form-group has-feedback">
    <label class="col-sm-2 control-label">Name</label>
    <div class="col-sm-4 has-feedback">
        @Html.TextBoxFor(model => model.GroupName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.GroupName)
    </div>
</div>
<div class="form-group has-feedback">
    <label class="col-sm-2 control-label">Generic Name</label>
    <div class="col-sm-4 has-feedback">
        @Html.TextBoxFor(model => model.GenericGroupName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.GenericGroupName)
    </div>
</div>
<div class="form-group">
    <label class="col-sm-2 control-label">Category</label>
    <div class="col-sm-4">
        @Html.DropDownListFor(m => m.CategoryId, ViewBag.Categories as IEnumerable<SelectListItem>, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CategoryId)
    </div>
</div>
<div class="form-group has-feedback">
    <label class="col-sm-2 control-label">Platform Cut (%)</label>
    <div class="col-sm-4 has-feedback">
        @Html.TextBoxFor(model => model.PlatformCut, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.PlatformCut)
    </div>
</div>
<div class="form-group">
    <label class="col-sm-2 control-label">Image</label>
    <div class="col-sm-2">
        <div class="thumbnail-wapper">
            <div class="thumbnail">
                <img src="@(string.IsNullOrEmpty(Model.Photo?.ThumbnailUrl) ? "/Images/placeholder.png" : Model.Photo.ThumbnailUrl)" />
            </div>
            <input type="file" value="" name="imageFile" />
            @Html.HiddenFor(m => m.Photo)
        </div>
    </div>
</div>
<div class="form-group">
    <label class="col-sm-2 control-label">Third Party Image</label>
    <div class="col-sm-2">
        <div class="thumbnail-wapper">
            <div class="thumbnail">
                <img src="@(string.IsNullOrEmpty(Model.TpPhoto?.ThumbnailUrl) ? "/Images/placeholder.png" : Model.TpPhoto.ThumbnailUrl)" />
            </div>
            <input type="file" value="" name="tpImageFile" />
            @Html.HiddenFor(m => m.TpPhoto)
        </div>
    </div>
</div>
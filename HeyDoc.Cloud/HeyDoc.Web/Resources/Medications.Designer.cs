//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeyDoc.Web.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Medications {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Medications() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HeyDoc.Web.Resources.Medications", typeof(Medications).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drugs should not be empty..
        /// </summary>
        internal static string ErrorDrugsEmpty {
            get {
                return ResourceManager.GetString("ErrorDrugsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This e-prescription can only be supplied by pharmacy outlets..
        /// </summary>
        internal static string ErrorEPSPrescriptionCheckout {
            get {
                return ResourceManager.GetString("ErrorEPSPrescriptionCheckout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group already exists..
        /// </summary>
        internal static string ErrorGroupAlreadyExists {
            get {
                return ResourceManager.GetString("ErrorGroupAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter a group name..
        /// </summary>
        internal static string ErrorGroupNameNull {
            get {
                return ResourceManager.GetString("ErrorGroupNameNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group not found..
        /// </summary>
        internal static string ErrorGroupNotFound {
            get {
                return ResourceManager.GetString("ErrorGroupNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please fill in medication name..
        /// </summary>
        internal static string ErrorMedNameNull {
            get {
                return ResourceManager.GetString("ErrorMedNameNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Medication not found..
        /// </summary>
        internal static string ErrorNotFound {
            get {
                return ResourceManager.GetString("ErrorNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Order failed. Please contact support..
        /// </summary>
        internal static string ErrorOrderFailed {
            get {
                return ResourceManager.GetString("ErrorOrderFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This prescription has already been supplied..
        /// </summary>
        internal static string ErrorPrescriptionDispensed {
            get {
                return ResourceManager.GetString("ErrorPrescriptionDispensed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This prescription needs to first be approved by a doctor. Please consult our healthcare professional if you require more information..
        /// </summary>
        internal static string ErrorPrescriptionNotApproved {
            get {
                return ResourceManager.GetString("ErrorPrescriptionNotApproved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xilnex ID length must be less than 100 characters..
        /// </summary>
        internal static string ErrorXilnexIDTooLong {
            get {
                return ResourceManager.GetString("ErrorXilnexIDTooLong", resourceCulture);
            }
        }
    }
}

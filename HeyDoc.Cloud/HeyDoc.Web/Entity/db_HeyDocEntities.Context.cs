//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeyDoc.Web.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class db_HeyDocEntities : DbContext
    {
        public db_HeyDocEntities()
            : base("name=db_HeyDocEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BloodGluccoseFastingHistory> BloodGluccoseFastingHistories { get; set; }
        public virtual DbSet<BloodGluccoseHistory> BloodGluccoseHistories { get; set; }
        public virtual DbSet<BloodPressureHistory> BloodPressureHistories { get; set; }
        public virtual DbSet<BMIHistory> BMIHistories { get; set; }
        public virtual DbSet<BodyTemperatureHistory> BodyTemperatureHistories { get; set; }
        public virtual DbSet<ChatRoom> ChatRooms { get; set; }
        public virtual DbSet<Chat> Chats { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Doctor> Doctors { get; set; }
        public virtual DbSet<DoctorStat> DoctorStats { get; set; }
        public virtual DbSet<DoctorUserReview> DoctorUserReviews { get; set; }
        public virtual DbSet<DutyRoster> DutyRosters { get; set; }
        public virtual DbSet<HeartRateHistory> HeartRateHistories { get; set; }
        public virtual DbSet<HeightHistory> HeightHistories { get; set; }
        public virtual DbSet<Invitation> Invitations { get; set; }
        public virtual DbSet<MenstrualDurationHistory> MenstrualDurationHistories { get; set; }
        public virtual DbSet<MenstrualPeriodHistory> MenstrualPeriodHistories { get; set; }
        public virtual DbSet<PatientGoal> PatientGoals { get; set; }
        public virtual DbSet<Patient> Patients { get; set; }
        public virtual DbSet<Photo> Photos { get; set; }
        public virtual DbSet<Remark> Remarks { get; set; }
        public virtual DbSet<Setting> Settings { get; set; }
        public virtual DbSet<UserProfile> UserProfiles { get; set; }
        public virtual DbSet<Voice> Voices { get; set; }
        public virtual DbSet<webpages_Membership> webpages_Membership { get; set; }
        public virtual DbSet<webpages_OAuthMembership> webpages_OAuthMembership { get; set; }
        public virtual DbSet<webpages_Roles> webpages_Roles { get; set; }
        public virtual DbSet<WeightHistory> WeightHistories { get; set; }
        public virtual DbSet<PaymentRequest> PaymentRequests { get; set; }
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<PlatformPercent> PlatformPercents { get; set; }
        public virtual DbSet<CashOutRequest> CashOutRequests { get; set; }
        public virtual DbSet<PromotionUrl> PromotionUrls { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<ChatResponse> ChatResponses { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<PromoCode> PromoCodes { get; set; }
        public virtual DbSet<Banner> Banners { get; set; }
        public virtual DbSet<PrescriptionDispatch> PrescriptionDispatchs { get; set; }
        public virtual DbSet<Corporate> Corporates { get; set; }
        public virtual DbSet<OnSiteDispens> OnSiteDispenses { get; set; }
        public virtual DbSet<Branch> Branchs { get; set; }
        public virtual DbSet<ScanDetail> ScanDetails { get; set; }
        public virtual DbSet<OnSiteDateSelection> OnSiteDateSelections { get; set; }
        public virtual DbSet<Device> Devices { get; set; }
        public virtual DbSet<Prescription> Prescriptions { get; set; }
        public virtual DbSet<PrescriptionLog> PrescriptionLogs { get; set; }
        public virtual DbSet<UserCorperate> UserCorperates { get; set; }
        public virtual DbSet<MedicationQuestion> MedicationQuestions { get; set; }
        public virtual DbSet<MedicationUserAnswer> MedicationUserAnswers { get; set; }
        public virtual DbSet<Drug> Drugs { get; set; }
        public virtual DbSet<Medication> Medications { get; set; }
        public virtual DbSet<AuditLog> AuditLogs { get; set; }
        public virtual DbSet<MedicationGroup> MedicationGroups { get; set; }
        public virtual DbSet<OnlineStatusLog> OnlineStatusLogs { get; set; }
        public virtual DbSet<ThirdPartyAdministrator> ThirdPartyAdministrators { get; set; }
        public virtual DbSet<OnSiteEventCheckIn> OnSiteEventCheckIns { get; set; }
        public virtual DbSet<OnSiteEvent> OnSiteEvents { get; set; }
        public virtual DbSet<OnSiteEventType> OnSiteEventTypes { get; set; }
        public virtual DbSet<ChatBotAnswer> ChatBotAnswers { get; set; }
        public virtual DbSet<ChatBotQuestion> ChatBotQuestions { get; set; }
        public virtual DbSet<ChatBotResponse> ChatBotResponses { get; set; }
        public virtual DbSet<ChatBotResponseTag> ChatBotResponseTags { get; set; }
        public virtual DbSet<ChatBotSession> ChatBotSessions { get; set; }
        public virtual DbSet<MedicalConditionMedication> MedicalConditionMedications { get; set; }
        public virtual DbSet<MedicalCondition> MedicalConditions { get; set; }
        public virtual DbSet<ChatBotAnswerKey> ChatBotAnswerKeys { get; set; }
        public virtual DbSet<SignUpPurpose> SignUpPurposes { get; set; }
        public virtual DbSet<UserReferralCode> UserReferralCodes { get; set; }
        public virtual DbSet<ExternalVideoChatLog> ExternalVideoChatLogs { get; set; }
        public virtual DbSet<AvixoMedicalCertificate> AvixoMedicalCertificates { get; set; }
        public virtual DbSet<DoctorGroupUserTypeAssociation> DoctorGroupUserTypeAssociations { get; set; }
        public virtual DbSet<NotificationReadStatu> NotificationReadStatus { get; set; }
        public virtual DbSet<NotificationTag> NotificationTags { get; set; }
        public virtual DbSet<Icd> Icds { get; set; }
        public virtual DbSet<PrescriptionSource> PrescriptionSources { get; set; }
        public virtual DbSet<Facility> Facilities { get; set; }
        public virtual DbSet<FacilityType> FacilityTypes { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<Township> Townships { get; set; }
        public virtual DbSet<Certi> Certis { get; set; }
        public virtual DbSet<DocFacilityAccessment> DocFacilityAccessments { get; set; }
        public virtual DbSet<DoctorApproved> DoctorApproveds { get; set; }
        public virtual DbSet<VirtualPoint> VirtualPoints { get; set; }
        public virtual DbSet<VirtualPointDetails> VirtualPointDetails1 { get; set; }
        public virtual DbSet<UserExtra> UserExtras { get; set; }
        public virtual DbSet<Qualification> Qualifications { get; set; }
        public virtual DbSet<Relationship> Relationships { get; set; }
        public virtual DbSet<Speciality> Specialities { get; set; }
        public virtual DbSet<DoctorQualification> DoctorQualifications { get; set; }
        public virtual DbSet<DoctorSpeciality> DoctorSpecialities { get; set; }
        public virtual DbSet<Title> Titles { get; set; }
        public virtual DbSet<database_firewall_rules> database_firewall_rules { get; set; }
        public virtual DbSet<VaccinatedUserInfo> VaccinatedUserInfoes { get; set; }
        public virtual DbSet<VaccineDetail> VaccineDetails { get; set; }
        public virtual DbSet<VaccineGeneral> VaccineGenerals { get; set; }
        public virtual DbSet<VaccinatedUser> VaccinatedUsers { get; set; }
        public virtual DbSet<PointTopupRequest> PointTopupRequests { get; set; }
        public virtual DbSet<PointBalance> PointBalances { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<CorporatePosition> CorporatePositions { get; set; }
        public virtual DbSet<PatientExtra> PatientExtras { get; set; }
        public virtual DbSet<CompanyWhiteLabel> CompanyWhiteLabels { get; set; }
        public virtual DbSet<DoctorDuty> DoctorDuties { get; set; }
        public virtual DbSet<CompanyWhiteLabelCurrentLogin> CompanyWhiteLabelCurrentLogins { get; set; }
        public virtual DbSet<PaymentMethod> PaymentMethods { get; set; }
    
        public virtual int SP_ReadAllMessage(Nullable<int> userId, Nullable<int> chatRoomId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var chatRoomIdParameter = chatRoomId.HasValue ?
                new ObjectParameter("ChatRoomId", chatRoomId) :
                new ObjectParameter("ChatRoomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ReadAllMessage", userIdParameter, chatRoomIdParameter);
        }
    
        public virtual int SP_RepliedAllMessage(Nullable<int> userId, Nullable<int> chatRoomId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var chatRoomIdParameter = chatRoomId.HasValue ?
                new ObjectParameter("ChatRoomId", chatRoomId) :
                new ObjectParameter("ChatRoomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RepliedAllMessage", userIdParameter, chatRoomIdParameter);
        }
    }
}
